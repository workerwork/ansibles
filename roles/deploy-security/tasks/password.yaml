# Copyright 2019 baicells Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: Renew "/etc/login.defs"
  copy:
    src: roles/deploy-security/files/password/login.defs
    dest: /etc/
    backup: yes
    force: yes

- name: Renew "/etc/pam.d/system-auth"
  copy:
    src: roles/deploy-security/files/password/system-auth
    dest: /etc/pam.d/
    backup: yes
    force: yes

- name: Renew "/etc/pam.d/sshd"
  copy:
    src: roles/deploy-security/files/password/sshd
    dest: /etc/pam.d/
    backup: yes
    force: yes


    #- block:
    #- name: Run check null password script
    #script: roles/deploy-security/files/password/check_user.sh
    #register: result
  
    #- name: Show the result
    #debug: var=result
    #when: true
 
    #- block:
    #- name: Users with login privileges in the system[run]
    #shell: "awk -F: '($7==\"/bin/bash\"){print $1}' /etc/passwd"
    #register: ret

    #- name: Users with login privileges in the system[show] 
    #debug:
    #  var: ret.stdout_lines
      
- block:
  - name: Users with empty password in the system[run]
    shell: "awk -F: '($2==\"\"){print $1}' /etc/shadow"
    register: ret
  
  - name: Users with empty password in the system[show]
    debug:
      var: ret.stdout_lines  

- block:
  - name: Make sure we have a 'wheel' group
    group:
      name: wheel
      state: present

  - name: Allow 'wheel' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
  
  - name: Create user {{ user_default.name }}
    user:
      name: "{{ user_default.name }}"
      password: "{{ user_default.password }}"
      shell: /bin/bash
      groups: wheel
      createhome: yes
      home: /home/{{ user_default.name }}
      state: present

- name: Force to renew password next login
  shell: "chage -d0 {{ user_default.name }}"

 
